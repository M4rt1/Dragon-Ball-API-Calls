{"version":3,"sources":["components/DragonBallAPI.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["DragonBallAPI","props","state","characters","url","error","isLoaded","showList","toggleBio","componentDidMount","bind","handleDisplay","a","axios","get","this","then","res","setState","data","prevState","kekw","chars","onClick","className","class","map","id","name","bio","React","Component","Header","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTA+EeA,E,kDA1EX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAY,GACZC,IAAK,sGACLC,MAAO,KACPC,UAAU,EACVC,UAAU,EACVC,UAAW,MAEf,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKF,UAAY,EAAKA,UAAUE,KAAf,gBAZF,E,4FAenB,iCAAAE,EAAA,sDACIC,IACKC,IAAIC,KAAKb,MAAME,KACfY,MAAK,SAAAC,GACF,EAAKC,SAAS,CACVf,WAAYc,EAAIE,KAAJ,WACZb,UAAU,OAGd,SAACD,GACG,EAAKa,SAAS,CACVZ,UAAU,EACVD,aAZpB,gD,iFAiBA,WACIU,KAAKG,UAAS,SAACE,GACX,MAAO,CACHb,UAAWa,EAAUb,e,uBAKjC,SAAUc,GACNN,KAAKG,SAAS,CACVV,UAAWa,M,oBAInB,WAAU,IAAD,OACDC,EAAQP,KAAKb,MAAMC,WACvB,OACKY,KAAKb,MAAMI,SAER,qCACI,yBAAQiB,QAASR,KAAKJ,cAAea,UAAU,WAA/C,UACI,mBAAGC,MAAM,8BADb,gBAGI,mBAAGA,MAAM,iCAEZV,KAAKb,MAAMK,SAER,mCACKe,EAAMI,KAAI,SAAAL,GAAI,OACX,oCACI,wBAAQG,UAAU,WAAWD,QAAS,kBAAM,EAAKf,UAAUa,EAAKM,KAAhE,SAAsEN,EAAKO,OAC3E,qBAAKJ,UAAW,EAAKtB,MAAMM,YAAca,EAAKM,GAAK,oBAAsB,iBAAzE,SAA4FN,EAAKQ,cAI7G,gCAjBR,8C,GAnDYC,IAAMC,WCSnBC,E,4JATX,WACI,OACI,gC,GAJSF,IAAMC,W,MCQZE,MARf,WACI,OACI,qBAAKT,UAAU,SAAf,2C,MCWOU,MAVf,WACE,OACE,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCESW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.22f2ed7e.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport '../styles/DragonBallAPI.css';\n\nclass DragonBallAPI extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            characters: [],\n            url: 'https://raw.githubusercontent.com/andrewbaisden/dragonball-character-database/master/client/db.json',\n            error: null,\n            isLoaded: false,\n            showList: false,\n            toggleBio: null\n        }\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.handleDisplay = this.handleDisplay.bind(this);\n        this.toggleBio = this.toggleBio.bind(this);\n    }\n\n    async componentDidMount() {\n        axios\n            .get(this.state.url)\n            .then(res => {\n                this.setState({\n                    characters: res.data['characters'],\n                    isLoaded: true\n                })\n            },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    })\n                })\n    }\n\n    handleDisplay() {\n        this.setState((prevState) => {\n            return {\n                showList: !prevState.showList\n            }\n        })\n    }\n\n    toggleBio(kekw) {\n        this.setState({\n            toggleBio: kekw\n        })\n    }\n\n    render() {\n        let chars = this.state.characters;\n        return (\n            !this.state.isLoaded ?\n                <div>LOADING</div> :\n                <>\n                    <button onClick={this.handleDisplay} className='main-btn'>\n                        <i class=\"fas fa-arrows-alt-v arrow\"></i>\n                        Show Warriors\n                        <i class=\"fas fa-arrows-alt-v arrow\"></i>\n                    </button>\n                    {this.state.showList\n                        ?\n                        <>\n                            {chars.map(kekw =>\n                                <content>\n                                    <button className='list-btn' onClick={() => this.toggleBio(kekw.id)}>{kekw.name}</button>\n                                    <div className={this.state.toggleBio === kekw.id ? 'displayed-element' : 'hidden-element'}>{kekw.bio}</div>\n                                </content>)}\n                        </>\n                        :\n                        <></>\n                    }\n                </>\n        )\n    }\n}\n\nexport default DragonBallAPI;","import React from 'react';\n\nclass Header extends React.Component {\n\n    render() {\n        return (\n            <content>\n\n            </content>\n        )\n    }\n}\n\nexport default Header;","import '../styles/Footer.css';\n\nfunction Footer() {\n    return (\n        <div className='footer'>\n            App made by Martin Bulkowski\n        </div>\n    )\n}\n\nexport default Footer;","import DragonBallAPI from './components/DragonBallAPI';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <DragonBallAPI />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}